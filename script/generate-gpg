#!/usr/bin/env bash
set -euxo pipefail

cd "$(dirname "$0")/.."

echo "Generating a new GPG key for USER-ID ${1:?USER-ID not set}..."

# Generating a new GPG key
# https://docs.github.com/en/authentication/managing-commit-signature-verification/generating-a-new-gpg-key
gpg --quiet --quick-generate-key "${1}" default default none

# Codespaces has issues when GPG commit signing is enabled on the containers as
# well as in gitconfig. Since our global gitconfig gets synced to dotfiles and
# thus to codespaces, we can set some system level config here instead.
# https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key
sec_key="$(gpg --list-secret-keys --keyid-format=long "${1}" | grep sec | cut -d '/' -f2 | cut -w -f1)"
git config --global --unset gpg.format || true
git config --global user.signingkey $sec_key
git config --global commit.gpgsign true
git config --global gpg.program $(which gpg)

# Adding your GPG key to your GitHub account
# https://docs.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account
echo "To add your public key to GitHub, etc., run 'gpg --armor --export \"${1}\" | pbcopy' to copy the key to your clipboard."
