#!/usr/bin/env bash
set -eu

cd "$(dirname "$0")"

if [ -z "${HOME:-}" ]; then
  echo "Error: \$HOME is not defined or is empty: Aborting!"
  exit 1
fi

echo "Starting bootstrap..."

# Check for Oh My Zsh and install if we don't have it
if [ -z "$(command -v omz 2>/dev/null)" ]; then
  echo "Installing Oh My Zsh..."
  /usr/bin/env bash -c "$(wget -qO- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
fi

ZSH="${ZSH:-${HOME}/.oh-my-zsh}"
ZSH_CUSTOM="${ZSH_CUSTOM:-${ZSH}/custom}"
mkdir -p "${ZSH_CUSTOM}"

if [ -n "${CODESPACES:-}" ]; then
  export DOTFILES="/workspaces/.codespaces/.persistedshare/dotfiles"
else
  export DOTFILES="${DOTFILES:-${HOME}/.dotfiles}"
fi

echo "Copying dotfiles from '${DOTFILES}' to '${HOME}'..."
home_dotfiles=(
  ".gitconfig"
  ".gitignore_global"
  ".zshrc"
)
for file in "${home_dotfiles[@]}"; do
  echo "Copying ${file}"
  ln -sfn "${DOTFILES}/${file}" "${HOME}/${file}"
done

echo "Copying dotfiles from '${DOTFILES}' to '${ZSH_CUSTOM}'..."
zsh_custom_dotfiles=(
  "agnoster.zsh-theme"
  "aliases.zsh"
  "path.zsh"
)
for file in "${zsh_custom_dotfiles[@]}"; do
  echo "Copying ${file}"
  ln -sfnw "${DOTFILES}/${file}" "${ZSH_CUSTOM}/${file}"
done

echo "Copying omz plugins..."
[ -d "${ZSH_CUSTOM}/plugins/zsh-syntax-highlighting" ] || git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "${ZSH_CUSTOM}/plugins/zsh-syntax-highlighting"
[ -d "${ZSH_CUSTOM}/plugins/zsh-autosuggestions" ] || git clone https://github.com/zsh-users/zsh-autosuggestions.git "${ZSH_CUSTOM}/plugins/zsh-autosuggestions"
[ -d "${ZSH_CUSTOM}/plugins/zsh-completions" ] || git clone https://github.com/zsh-users/zsh-completions.git "${ZSH_CUSTOM}/plugins/zsh-completions"
[ -d "${ZSH_CUSTOM}/plugins/zsh-history-substring-search" ] || git clone https://github.com/zsh-users/zsh-history-substring-search "${ZSH_CUSTOM}/plugins/zsh-history-substring-search"

echo "Setting ZSH is the default shell (e.g. for SSH)..."
if [ -z $(grep "^root:.*/bin/zsh$" /etc/passwd 2>/dev/null) ]; then
  chsh -s $(command -v zsh) root
fi

[ -n "${CODESPACES:-}" ] && ./codespaces-bootstrap

echo "Done bootstrapping!"
